<?xml version="1.0" encoding="utf-8"?>

<Project Sdk="Microsoft.NET.Sdk" InitialTargets="">

    <PropertyGroup>
        <RootNamespace>RATS</RootNamespace>
        <AssemblyName>RATS</AssemblyName>
        <TargetFramework>net48</TargetFramework>
        <LangVersion>preview</LangVersion>
        <ModName>R.A.T.S</ModName>

        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <SteamPath Condition=" '$(RIMWORLD_STEAM_PATH)' == '' ">../../../../</SteamPath>
        <SteamPath Condition=" '$(RIMWORLD_STEAM_PATH)' != '' ">$(RIMWORLD_STEAM_PATH)</SteamPath>
        <SteamModsPath Condition=" '$(RIMWORLD_STEAM_MODS_PATH)' == '' ">$(SteamPath)/Mods</SteamModsPath>
        <SteamModsPath Condition=" '$(RIMWORLD_STEAM_MODS_PATH)' != '' ">$(RIMWORLD_STEAM_MODS_PATH)</SteamModsPath>
        <OutputPath>../../Assemblies/</OutputPath>
        <ZipFilePath>../../../$(AssemblyName).zip</ZipFilePath>
        <ReleasePath>../../../Release</ReleasePath>
        <AssemblyVersion>1.1.0</AssemblyVersion>
        <FileVersion>1.1.0</FileVersion>
        <Version>1.1.0</Version>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
        <DefineConstants>TRACE;DEBUG</DefineConstants>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks> <!-- Unsafe is required for publicising! -->
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <Optimize>true</Optimize>
        <DebugType>none</DebugType>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
        <DefineConstants>TRACE;DEBUG</DefineConstants>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <Optimize>false</Optimize>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>portable</DebugType>
    </PropertyGroup>

    <ItemGroup>
        <Reference Include="Assembly-CSharp">
            <HintPath Condition="Exists('$(SteamPath)/RimWorldWin64_Data')">$(SteamPath)/RimWorldWin64_Data/Managed/Assembly-CSharp.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.CSharp" />
        <Reference Include="UnityEngine.AssetBundleModule">
            <HintPath Condition="Exists('$(SteamPath)/RimWorldWin64_Data')">$(SteamPath)/RimWorldWin64_Data/Managed/UnityEngine.AssetBundleModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath Condition="Exists('$(SteamPath)/RimWorldWin64_Data')">$(SteamPath)/RimWorldWin64_Data/Managed/UnityEngine.CoreModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.TextRenderingModule">
            <HintPath Condition="Exists('$(SteamPath)/RimWorldWin64_Data')">$(SteamPath)/RimWorldWin64_Data/Managed/UnityEngine.TextRenderingModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule">
            <HintPath Condition="Exists('$(SteamPath)/RimWorldWin64_Data')">$(SteamPath)/RimWorldWin64_Data/Managed/UnityEngine.IMGUIModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="CSharpier.MsBuild" Version="0.28.2">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Lib.Harmony" Version="2.*" ExcludeAssets="runtime" />
    </ItemGroup>

    <ItemGroup Condition="'@(Reference->WithMetadataValue('Identity', 'Assembly-CSharp')->Metadata('HintPath')->Exists())' == ''">
        <PackageReference Include="Krafs.Rimworld.Ref" Version="1.5.4104" />
    </ItemGroup>

    <PropertyGroup>
        <StartAction>Program</StartAction>
        <StartProgram>$(SteamPath)/RimWorldWin64.exe</StartProgram>
    </PropertyGroup>

    <ItemGroup>
        <ReleaseFiles Include="../../*.xml;../../../*.xml;../../../*.md;../../../LICENSE"
                      Exclude="../../Source/**;../../Assemblies/**">
            <Link>Files/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </ReleaseFiles>
        <AboutFiles Include="../../About/**;">
            <Link>Files/About/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </AboutFiles>
        <DefFiles Include="../../Defs/**">
            <Link>Files/Defs/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </DefFiles>
        <LanguageFiles Include="../../Languages/**">
            <Link>Files/Languages/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </LanguageFiles>
        <PatchFiles Include="..\..\Patches\**">
            <Link>Files/Patches/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </PatchFiles>
        <BundleFiles Include="../../Materials/**">
            <Link>Files/Materials/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </BundleFiles>
        <TextureFiles Include="../../Textures/**">
            <Link>Files/Textures/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </TextureFiles>
        <SoundFiles Include="../../Sounds/**">
            <Link>Files/Sounds/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </SoundFiles>
        <ReleaseAssemblies Include="../../Assemblies/*.dll" Exclude="../Assemblies/0Harmony.dll">
            <Link>Files/Assemblies/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </ReleaseAssemblies>
        <GitMeta Include="../../.git*">
            <Link>Files/%(RecursiveDir)%(Filename)%(Extension)</Link>
        </GitMeta>

    </ItemGroup>

    <!-- Add A step to the build to run csharpier on build -->
    <Target Name="CheckCsharpier" BeforeTargets="Build">
        <Exec Command="dotnet csharpier --version" IgnoreExitCode="true">
            <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
        </Exec>
    </Target>

    <Target Name="FormatCode" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Release' And '$(ExitCode)' == '0' " DependsOnTargets="CheckCsharpier">
        <Exec Command="dotnet csharpier ." />
    </Target>

    <Target Name="CleanRelease" AfterTargets="Clean">
        <RemoveDir Directories="$(ReleasePath)" Condition="Exists('$(ReleasePath)')" />
        <Delete Files="$(ZipFilePath)" Condition="Exists('$(ZipFilePath)')" />
    </Target>

    <Target Name="PostBuild" AfterTargets="Build" DependsOnTargets="CleanRelease" Condition=" '$(Configuration)' == 'Release' ">
        <MakeDir Directories="$(ReleasePath)" />
        <Copy SourceFiles="@(ReleaseFiles)" DestinationFiles="@(ReleaseFiles->'$(ReleasePath)/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(ReleaseAssemblies)" DestinationFiles="@(ReleaseAssemblies->'$(ReleasePath)/Assemblies/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(AboutFiles)" DestinationFolder="$(ReleasePath)/About" />
        <Copy SourceFiles="@(DefFiles)" DestinationFiles="@(DefFiles->'$(ReleasePath)/Defs/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(LanguageFiles)" DestinationFiles="@(LanguageFiles->'$(ReleasePath)/Languages/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(PatchFiles)" DestinationFiles="@(PatchFiles->'$(ReleasePath)/Patches/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(TextureFiles)" DestinationFiles="@(TextureFiles->'$(ReleasePath)/Textures/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(BundleFiles)" DestinationFiles="@(BundleFiles->'$(ReleasePath)/Materials/%(RecursiveDir)%(Filename)%(Extension)')" />
        <Copy SourceFiles="@(SoundFiles)" DestinationFiles="@(SoundFiles->'$(ReleasePath)/Sounds/%(RecursiveDir)%(Filename)%(Extension)')" />
        <ZipDirectory DestinationFile="$(ZipFilePath)" SourceDirectory="$(ReleasePath)" Overwrite="true" />
        <RemoveDir Condition="Exists('$(ReleasePath)')" Directories="$(ReleasePath)" ContinueOnError="true" />
    </Target>

</Project>
